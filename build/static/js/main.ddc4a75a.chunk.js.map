{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","clickHandler","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","Addtask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","showAddTask","setShowAddTask","setTasks","Math","floor","random","newTask","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ddc4a75a.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\r\nconst Button = ({ color, text, clickHandler }) => {\r\n\treturn (\r\n\t\t<button\r\n\t\t\tonClick={clickHandler}\r\n\t\t\tstyle={{ backgroundColor: color }}\r\n\t\t\tclassName=\"btn\"\r\n\t\t>\r\n\t\t\t{text}\r\n\t\t</button>\r\n\t);\r\n};\r\n\r\nButton.defaultProps = {\r\n\tcolor: \"steelblue\",\r\n};\r\nButton.propTypes = {\r\n\ttext: PropTypes.string,\r\n\tcolor: PropTypes.string,\r\n\tonCLick: PropTypes.func,\r\n};\r\n\r\nexport default Button;\r\n","import PropTypes from 'prop-types'\r\nimport Button from './Button'\r\nconst Header = ({title, onAdd, showAdd}) => {\r\n    \r\n    return (\r\n        <header className= 'header'>\r\n            <h1>{title}</h1>\r\n            <Button color='green'  text={showAdd ? 'Close' : 'Add'} \r\n            clickHandler={onAdd}/>\r\n        </header>\r\n    \r\n    )\r\n}\r\nHeader.defaultProps ={\r\n    title:\"Task Tracker\",\r\n}\r\nHeader.propTypes = {\r\ntitle: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Header\r\n","import { FaTimes } from \"react-icons/fa\";\r\n\r\nconst Task = ({ task, onDelete, onToggle }) => {\r\n\treturn (\r\n\t\t<div\r\n\t\t\tclassName={`task ${task.reminder ? \"reminder\" : \"\"}`}\r\n\t\t\tonDoubleClick={() => onToggle(task.id)}\r\n\t\t>\r\n\t\t\t<h3>\r\n\t\t\t\t{task.text}\r\n\t\t\t\t<FaTimes\r\n\t\t\t\t\tstyle={{ color: \"red\", cursor: \"pointer\" }}\r\n\t\t\t\t\tonClick={() => onDelete(task.id)}\r\n\t\t\t\t/>\r\n\t\t\t</h3>\r\n\t\t\t<p>{task.day}</p>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Task;\r\n","import Task from \"./Task\";\r\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{tasks.map((task) => (\r\n\t\t\t\t<Task\r\n\t\t\t\t\tkey={task.id}\r\n\t\t\t\t\ttask={task}\r\n\t\t\t\t\tonDelete={onDelete}\r\n\t\t\t\t\tonToggle={onToggle}\r\n\t\t\t\t/>\r\n\t\t\t))}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Tasks;\r\n","import { useState } from \"react\";\r\nconst Addtask = ({onAdd}) => {\r\n\tconst [text, setText] = useState(\"\");\r\n\tconst [day, setDay] = useState(\"\");\r\n\tconst [reminder, setReminder] = useState(false);\r\n    const onSubmit = (e) =>{\r\n        e.preventDefault()\r\n        if(!text){\r\n            alert('Please add a text')\r\n            return\r\n        }\r\n         onAdd({ text, day, reminder})\r\n\r\n        setText('')\r\n        setDay('')\r\n        setReminder(false)\r\n    }\r\n\treturn (\r\n\t\t<form className=\"add-form\" onSubmit={onSubmit}>\r\n\t\t\t<div className=\"form-control\">\r\n\t\t\t\t<label> Task </label>\r\n\t\t\t\t<input type=\"text\" placeholder=\"Add Task\" \r\n                \r\n                value={text} onChange={(e)=>setText(e.target.value)}/>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"form-control\">\r\n\t\t\t\t<label> Day & Time </label>\r\n\t\t\t\t<input type=\"text\" placeholder=\"Add Day & Time\"\r\n                \r\n                value={day} onChange={(e)=>setDay(e.target.value)}/>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"form-control form-control-check\">\r\n\t\t\t\t<label> Set Reminder</label>\r\n\t\t\t\t<input type=\"checkbox\" checked={reminder}\r\n                value={reminder} onChange={(e)=>setReminder(e.currentTarget.checked)}/>\r\n\t\t\t</div>\r\n\r\n\t\t\t<input type=\"submit\" value=\" Save Task\" className=\"btn btn-block\" />\r\n\t\t</form>\r\n\t);\r\n};\r\n\r\nexport default Addtask;\r\n","import Header from \"./components/Header\";\nimport { useState } from \"react\";\nimport Tasks from \"./components/Tasks\";\nimport Addtask from \"./components/AddTask\";\nimport './App.css';\n\nfunction App() {\n  const [showAddTask, setShowAddTask]= useState(false)\n\tconst [tasks, setTasks] = useState([\n\t\t{\n\t\t\tid: 1,\n\t\t\ttext: \"Doctors Appointment\",\n\t\t\tday: \"Feb 5th at 2:30pm\",\n\t\t\treminder: true,\n\t\t},\n\t\t{\n\t\t\tid: 2,\n\t\t\ttext: \"Meeting at school\",\n\t\t\tday: \"Feb 6th at 1:30pm\",\n\t\t\treminder: true,\n\t\t},\n\t\t{\n\t\t\tid: 3,\n\t\t\ttext: \"Food Shopping\",\n\t\t\tday: \"Feb 5th at 2:30pm\",\n\t\t\treminder: false,\n\t\t},\n\t]);\n  \n  //Add Task\n  const addTask=(task) =>{\n    const id = Math.floor(Math.random() * 1000) + 1;\n    const newTask = {id, ...task};\n    setTasks([...tasks, newTask])\n  }\n\n\t//Delete Task\n\tconst deleteTask = (id) => {\n\t\tsetTasks(tasks.filter((task) => task.id !== id));\n\t};\n\n\t//Toggle Reminder\n\tconst toggleReminder = (id) => {\n\t\tsetTasks(\n\t\t\ttasks.map((task) =>\n\t\t\t\ttask.id === id ? { ...task, reminder: !task.reminder } : task\n\t\t\t)\n\t\t);\n\t};\n\treturn (\n\t\t<div className=\"container\">\n\t\t\t<Header onAdd ={() => setShowAddTask(!showAddTask)} showAdd={showAddTask} />\n      {showAddTask && <Addtask onAdd={addTask}/>}\n\t\t\t{tasks.length > 0 ? (\n\t\t\t\t<Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder} />\n\t\t\t) : (\n\t\t\t\t\"No Tasks To Show\"\n\t\t\t)}\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}